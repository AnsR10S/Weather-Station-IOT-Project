#include <SPI.h>
#include <Ethernet.h>
#include <BlynkSimpleEthernet.h>
#include <DHT.h>
#include <Wire.h>
#include <Adafruit_BMP085_U.h>

// DHT11 sensor configuration
#define DHTPIN 2        // PD2 (pin 4)
#define DHTTYPE DHT11   // DHT11 sensor type

// LDR and potentiometer pin configuration
#define LDR_PIN A0      // LDR connected to Analog pin A0
#define POT1_PIN A1     // Potentiometer 1 connected to Analog pin A1
#define POT2_PIN A2     // Potentiometer 2 connected to Analog pin A2

// Initialize DHT11
DHT dht(DHTPIN, DHTTYPE);

// Blynk authentication token
#define BLYNK_AUTH_TOKEN "EeoTXKqiXhoLZ19pZRLTMsktXmsF3bDA"
char auth[] = BLYNK_AUTH_TOKEN;

// Initialize BMP180 sensor
Adafruit_BMP085_Unified bmp;

void setup() {
  // Start the Serial Monitor for debugging
  Serial.begin(9600);

  // Initialize the DHT11 sensor
  dht.begin();

  // Start Blynk
  Blynk.begin(auth);

  // Initialize BMP180 sensor and check for successful connection
  if (!bmp.begin()) {
    Serial.println("BMP180 not detected. Check wiring!");
    while (1);  // Halt the program if BMP180 isn't detected
  } else {
    Serial.println("BMP180 detected and initialized!");
  }

  // Set up LDR and potentiometers (no sensors yet)
  pinMode(LDR_PIN, INPUT);
  pinMode(POT1_PIN, INPUT);
  pinMode(POT2_PIN, INPUT);
}

void loop() {
  Blynk.run();

  // Read temperature and humidity from DHT11
  float dhtTemperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  // Send temperature data to virtual pin V0 if valid
  if (!isnan(dhtTemperature)) {
    Blynk.virtualWrite(V0, dhtTemperature);  // Send to virtual pin V0
  }

  // Send humidity data to virtual pin V1 if valid
  if (!isnan(humidity)) {
    Blynk.virtualWrite(V1, humidity);  // Send to virtual pin V1
  }

  // Read and send LDR value to Blynk (V4)
  int ldrValue = analogRead(LDR_PIN);
  Blynk.virtualWrite(V4, ldrValue);

  // Read and send Potentiometer 1 value to Blynk (V5)
  int pot1Value = analogRead(POT1_PIN);
  int pot1Mapped = map(pot1Value, 0, 1023, 0, 100);  // Map to 0-100 range for better visibility
  Blynk.virtualWrite(V5, pot1Mapped);

  // Read and send Potentiometer 2 value to Blynk (V6)
  int pot2Value = analogRead(POT2_PIN);
  int pot2Mapped = map(pot2Value, 0, 1023, 0, 100);  // Map to 0-100 range for better visibility
  Blynk.virtualWrite(V6, pot2Mapped);

  // Delay to avoid flooding Blynk with data
  delay(5000);
}
